<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liyu.mapper.DispatcherReconciliationMapper">
  <resultMap id="BaseResultMap" type="cn.liyu.model.DispatcherReconciliation">
    <!--@mbg.generated-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_money" jdbcType="INTEGER" property="payMoney" />
    <result column="pay_status" jdbcType="SMALLINT" property="payStatus" />
    <result column="merchant_name" jdbcType="VARCHAR" property="merchantName" />
    <result column="line_id" jdbcType="INTEGER" property="lineId" />
    <result column="bill_start_time" jdbcType="TIMESTAMP" property="billStartTime" />
    <result column="bill_end_time" jdbcType="TIMESTAMP" property="billEndTime" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, pay_money, pay_status, merchant_name, line_id, bill_start_time, bill_end_time, 
    created_at, updated_at, deleted
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update dispatcher_reconciliation
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="pay_money = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.payMoney,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="pay_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.payStatus,jdbcType=SMALLINT}
        </foreach>
      </trim>
      <trim prefix="merchant_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.merchantName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="line_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lineId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="bill_start_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.billStartTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="bill_end_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.billEndTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createdAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updatedAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.deleted,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into dispatcher_reconciliation
    (pay_money, pay_status, merchant_name, line_id, bill_start_time, bill_end_time, created_at, 
      updated_at, deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.payMoney,jdbcType=INTEGER}, #{item.payStatus,jdbcType=SMALLINT}, #{item.merchantName,jdbcType=VARCHAR}, 
        #{item.lineId,jdbcType=INTEGER}, #{item.billStartTime,jdbcType=TIMESTAMP}, #{item.billEndTime,jdbcType=TIMESTAMP}, 
        #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP}, #{item.deleted,jdbcType=TINYINT}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.liyu.model.DispatcherReconciliation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into dispatcher_reconciliation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      pay_money,
      pay_status,
      merchant_name,
      line_id,
      bill_start_time,
      bill_end_time,
      created_at,
      updated_at,
      deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{payMoney,jdbcType=INTEGER},
      #{payStatus,jdbcType=SMALLINT},
      #{merchantName,jdbcType=VARCHAR},
      #{lineId,jdbcType=INTEGER},
      #{billStartTime,jdbcType=TIMESTAMP},
      #{billEndTime,jdbcType=TIMESTAMP},
      #{createdAt,jdbcType=TIMESTAMP},
      #{updatedAt,jdbcType=TIMESTAMP},
      #{deleted,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      pay_money = #{payMoney,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=SMALLINT},
      merchant_name = #{merchantName,jdbcType=VARCHAR},
      line_id = #{lineId,jdbcType=INTEGER},
      bill_start_time = #{billStartTime,jdbcType=TIMESTAMP},
      bill_end_time = #{billEndTime,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.liyu.model.DispatcherReconciliation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into dispatcher_reconciliation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payMoney != null">
        pay_money,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="merchantName != null">
        merchant_name,
      </if>
      <if test="lineId != null">
        line_id,
      </if>
      <if test="billStartTime != null">
        bill_start_time,
      </if>
      <if test="billEndTime != null">
        bill_end_time,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null">
        #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=SMALLINT},
      </if>
      <if test="merchantName != null">
        #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="lineId != null">
        #{lineId,jdbcType=INTEGER},
      </if>
      <if test="billStartTime != null">
        #{billStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billEndTime != null">
        #{billEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="payMoney != null">
        pay_money = #{payMoney,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=SMALLINT},
      </if>
      <if test="merchantName != null">
        merchant_name = #{merchantName,jdbcType=VARCHAR},
      </if>
      <if test="lineId != null">
        line_id = #{lineId,jdbcType=INTEGER},
      </if>
      <if test="billStartTime != null">
        bill_start_time = #{billStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billEndTime != null">
        bill_end_time = #{billEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
</mapper>